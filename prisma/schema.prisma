// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  name        String?
  username    String?
  password    String
  email       String    @unique
  github_id   Int?       @unique
  avatar_url  String?
  session     Session[]
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  roles       UserRole[]
  userVerify  UserVerify?
}

model UserVerify {
   id             String     @id @default(uuid())
   user           User       @relation(fields: [useId], references: [id])
   useId          String     @unique
   token          String
   created_at     DateTime   @default(now())
   updated_at     DateTime   @updatedAt
   verified_at    DateTime?  
}

model Role {
  id        String     @id @default(uuid())
  name      String     @unique
  userRoles UserRole[]
}

model UserRole {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  @@unique([userId, roleId])
  @@index([userId])
  @@index([roleId])
}

model Session {
  id            Int      @id @default(autoincrement())
  user_id       String?
  user          User?    @relation(fields: [user_id], references: [id])
  access_token  String?  @unique
  session_token String   @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  ip            String?
  country       String?

  @@index([user_id])
}
